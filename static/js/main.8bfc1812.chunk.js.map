{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Error.js","componentes/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","titulo","Formulario","ciudadRef","React","createRef","paisRef","handleSubmit","e","preventDefault","datos","ciudad","_this","current","value","pais","datosFormulario","onSubmit","this","id","ref","type","htmlFor","defaultValue","Component","Error","mensaje","Clima","mostrarInfo","_this$props$resultado","resultado","name","sys","main","weather","wind","country","weatherIcon","concat","icon","temp","temp_max","temp_min","description","src","alt","speed","console","log","App","state","error","consulta","datosInput","setState","fetchApi","_this$state$consulta","URI","fetch","then","response","json","data","catch","err","prevProps","prevState","_this2","cod","componentes_Error","setTimeout","componentes_Clima","componentes_Header","componentes_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bfc1812.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav-wrapper light-blue darken-2\">\r\n                   <a href=\"/\" className=\"brand-logo\">{props.titulo}</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n      );\r\n}\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Formulario extends Component {\r\n   ciudadRef = React.createRef();\r\n   paisRef = React.createRef();\r\n\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const datos = {\r\n            ciudad: this.ciudadRef.current.value,\r\n            pais: this.paisRef.current.value\r\n        }\r\n        this.props.datosFormulario(datos)\r\n    }\r\n \r\n    render() { \r\n        return ( \r\n            <div className=\"contenedor-form\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <form onSubmit={this.handleSubmit}> \r\n                            <div className=\"input-field col s12 m8 14 offset-m2\">\r\n                                <input id=\"ciudad\" ref={this.ciudadRef} type=\"text\"/>\r\n                                <label htmlFor=\"ciudad\">Ciudad</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 14 offset-m2\">\r\n                                <select id=\"pais\" ref={this.paisRef}>\r\n                                    <option value=\"\" defaultValue>Seleccione una opción</option>\r\n                                    <option value=\"MX\">México</option>\r\n                                    <option value=\"US\">Estados Unidos</option>\r\n                                    <option value=\"AR\">Argentina</option>\r\n                                </select>\r\n                                <label htmlFor=\"pais\">Pais</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12 m8 14 offset-m2 buscador\" >\r\n                                <button type=\"submit\" className=\"waves-effect waves-light btn-large yellow accent-4\">Buscar</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n         );\r\n    }\r\n}\r\nFormulario.propTypes = {\r\n    datosFormulario: PropTypes.func.isRequired\r\n} \r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Error = (props) => {\r\n    return ( \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6 offset-m3\">\r\n                    <div className=\"card-panel red darken-4 error\">\r\n                        {props.mensaje}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n     );\r\n}\r\n Error.propTypes = {\r\n     mensaje: PropTypes.string.isRequired\r\n }\r\nexport default Error;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nclass Clima extends Component {\r\n    mostrarInfo = () => {\r\n        const {name, sys, main, weather, wind} = this.props.resultado;\r\n        if (!name || !sys.country) {\r\n            return null;\r\n        }\r\n        const weatherIcon = `https://openweathermap.org/img/w/${weather[0].icon}.png`\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\" resultado col s12 m8 l6 offset-m2 offset-s3\">\r\n                    <div className=\"card-panel light-blue align-center\">\r\n                        <span className=\"white-text\">\r\n                            <h2>Resultado Clima de: {name}/{sys.country}</h2>\r\n                            <p>\r\n                                actual: {main.temp} °C\r\n                            </p>\r\n                           <p>Max{main.temp_max}°C</p>\r\n                           <p>Min{main.temp_min}°C</p>\r\n                           <p>{weather[0].description}<img src={weatherIcon} alt='Weather icon'></img></p> \r\n                            <p>Vintos: {wind.speed} </p>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        ) \r\n    }\r\n    render() { \r\n         console.log(this.props.resultado);\r\n        return ( \r\n            <div className=\"container\">\r\n                \r\n                {this.mostrarInfo()}\r\n            </div>\r\n         );\r\n    }\r\n}\r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Clima;","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport Error from './componentes/Error';\nimport Clima from './componentes/Clima'\n\n\n\n\nclass App extends Component {\n  state= {\n    error: '',\n    consulta: {},\n    resultado: {}\n\n\n  }\n  componentDidUpdate(prevProps, prevState){\n  if (prevState.consulta !== this.state.consulta) {\n    this.fetchApi();\n    \n  }\n \n  }\n\n\n\n  componentDidMount() {\n    this.setState({\n      error:false\n    }) \n  }\n\n  datosFormulario = (datosInput) =>{\n    if (datosInput.ciudad === '' || datosInput.pais === '') {\n      this.setState({\n        error:true\n      })\n    }else{\n      this.setState({\n        consulta: datosInput\n      })\n    }\n  }\n\n  fetchApi = () => {\n    const {ciudad, pais} = this.state.consulta;\n    if(!ciudad|| !pais) return null;\n    const apiKey = '0e013347066e05fd75b94061eab9468a'\n    const URI = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${apiKey}&units=metric`\n    fetch(URI)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          resultado: data\n        })\n       \n      })\n      \n      .catch(err => console.error('Se presentó un error '+ err))\n}\n  \n\n  render() {\n\n    const error = this.state.error;\n    const {cod} = this.state.resultado;\n    let resultado;\n    \n    if (error) {\n      resultado = <Error mensaje = 'Por favor llene todos los campos'/>\n      setTimeout(() => {\n        this.setState({\n          error: false\n        })\n      }, 3000);\n    }else if(cod ==='404'){\n      \n      resultado = <Error mensaje = 'Ciudad no econtrada'/>\n      setTimeout(() => {\n        this.setState({\n          error: false\n        })\n      }, 3000);\n    }    else{\n      resultado = <Clima resultado={this.state.resultado}/>\n    }\n\n    \n\n\n    return (\n      <div className=\"App\">\n        <Header titulo='Clima en tu ciudad'/>\n      \n        <Formulario datosFormulario={this.datosFormulario}/>\n        {resultado}\n\n        \n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}